{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./TodoApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoApp = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [editTodo, setEditTodo] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [refState, setRefState] = useState(\"input\");\n  const inputRef = useRef(null);\n  const editRef = useRef(null);\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n      setTodoId(loadedTodoIds);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\n  }, [todos, todoId]);\n  useEffect(() => {\n    if (refState === \"input\") {\n      inputRef.current.focus();\n    } else {\n      editRef.current.focus();\n    }\n  }, [refState]);\n\n  const addTodo = e => {\n    e.preventDefault();\n\n    if (!input || /^\\s*$/.test(input)) {\n      return;\n    }\n\n    const newTodo = {\n      id: todoId,\n      text: input,\n      completed: false\n    };\n    setTodoId(todoId + 1);\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n    console.log(\"Added Todo\");\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n    console.log(\"Deleted Todo\");\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const submitEdit = (e, id) => {\n    e.preventDefault();\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTodo(null);\n    setEditingText(\"\");\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n    setTodoId(0);\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-title\",\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todo-input\",\n        className: \"input-label\",\n        children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this), \" item:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-todo-input\",\n          name: \"todo-input\",\n          type: \"text\",\n          placeholder: \"ex: vacuum living room\",\n          onChange: e => setInput(e.target.value),\n          value: input,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-todo-button\",\n          children: \"Add To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), todos.map(todo => editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          onChange: () => toggleComplete(todo.id),\n          checked: todo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-todo-button\",\n          type: \"button\",\n          onClick: () => {\n            setEditTodo(todo.id);\n            setRefState(\"edit\");\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-todo-button\",\n          type: \"button\",\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        submitEdit(e, todo.id);\n        setRefState(\"input\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"todo-edit-input\",\n          placeholder: \"Type your edit\",\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value),\n          value: editingText,\n          ref: editRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-edit-button\",\n          type: \"submit\",\n          children: \"Submit Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTodos,\n      className: \"clear-button\",\n      children: \"Clear Entire To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoApp, \"CD+Jp5j1zK5zocjylSbUUppqUwU=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/TodoApp.js"],"names":["React","useState","useEffect","useRef","TodoApp","input","setInput","todos","setTodos","todoId","setTodoId","editTodo","setEditTodo","editingText","setEditingText","refState","setRefState","inputRef","editRef","console","log","loadedTodos","JSON","parse","localStorage","getItem","loadedTodoIds","setItem","stringify","current","focus","addTodo","e","preventDefault","test","newTodo","id","text","completed","concat","deleteTodo","updatedTodos","filter","todo","toggleComplete","map","submitEdit","clearTodos","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./TodoApp.css\";\r\n\r\nconst TodoApp = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoId, setTodoId] = useState(0);\r\n\r\n  const [editTodo, setEditTodo] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n  const [refState, setRefState] = useState(\"input\");\r\n\r\n  const inputRef = useRef(null);\r\n  const editRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"componentDidMount\");\r\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n      setTodoId(loadedTodoIds);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\r\n  }, [todos, todoId]);\r\n\r\n  useEffect(() => {\r\n    if (refState === \"input\") {\r\n      inputRef.current.focus();\r\n    } else {\r\n      editRef.current.focus();\r\n    }\r\n  }, [refState]);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    if (!input || /^\\s*$/.test(input)) {\r\n      return;\r\n    }\r\n    const newTodo = {\r\n      id: todoId,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n    setTodoId(todoId + 1);\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n    console.log(\"Added Todo\");\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n    console.log(\"Deleted Todo\");\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const submitEdit = (e, id) => {\r\n    e.preventDefault();\r\n\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.text = editingText;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    setEditTodo(null);\r\n    setEditingText(\"\");\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n    setTodoId(0);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <div className=\"app-title\">What's the Plan for Today?</div>\r\n      <form onSubmit={addTodo}>\r\n        <label htmlFor=\"todo-input\" className=\"input-label\">\r\n          Add your <u>To-Do</u> item:\r\n        </label>\r\n        <div className=\"add-todo\">\r\n          <input\r\n            className=\"add-todo-input\"\r\n            name=\"todo-input\"\r\n            type=\"text\"\r\n            placeholder=\"ex: vacuum living room\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            value={input}\r\n            ref={inputRef}\r\n          />\r\n          <button type=\"submit\" className=\"add-todo-button\">\r\n            Add To-Do\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {todos.map((todo) =>\r\n        editTodo !== todo.id ? (\r\n          <div className=\"todo\" key={todo.id}>\r\n            <p>{todo.text}</p>\r\n            {/* {todo.id} */}\r\n            <div className=\"button-options\">\r\n              <input\r\n                className=\"checkbox\"\r\n                type=\"checkbox\"\r\n                onChange={() => toggleComplete(todo.id)}\r\n                checked={todo.completed}\r\n              />\r\n              <button\r\n                className=\"edit-todo-button\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setEditTodo(todo.id);\r\n                  setRefState(\"edit\");\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"delete-todo-button\"\r\n                type=\"button\"\r\n                onClick={() => deleteTodo(todo.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <form\r\n            key={todo.id}\r\n            onSubmit={(e) => {\r\n              submitEdit(e, todo.id);\r\n              setRefState(\"input\");\r\n            }}\r\n          >\r\n            <div className=\"todo-edit\">\r\n              <input\r\n                className=\"todo-edit-input\"\r\n                placeholder=\"Type your edit\"\r\n                type=\"text\"\r\n                onChange={(e) => setEditingText(e.target.value)}\r\n                value={editingText}\r\n                ref={editRef}\r\n              />\r\n              <button className=\"todo-edit-button\" type=\"submit\">\r\n                Submit Edit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )\r\n      )}\r\n      <button onClick={clearTodos} className=\"clear-button\">\r\n        Clear Entire To-Do List\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}