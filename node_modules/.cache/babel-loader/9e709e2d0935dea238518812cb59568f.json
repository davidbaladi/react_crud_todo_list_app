{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect } from \"react\";\nimport \"./todo.css\";\nimport { ImCheckmark } from \"react-icons/im\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { AiTwotoneDelete } from \"react-icons/ai\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(_ref => {\n  _s();\n\n  let {\n    todo,\n    toggleComplete,\n    submitEdit,\n    deleteTodo,\n    setET,\n    editingText,\n    setEditTodo,\n    editTodo\n  } = _ref;\n  let editRef = useRef(null);\n  useEffect(() => {\n    editRef.current.focus();\n  });\n  return editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: todo.completed ? \"completed\" : null,\n      onClick: () => toggleComplete(todo.id),\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => toggleComplete(todo.id),\n        checked: todo.completed,\n        children: todo.completed ? /*#__PURE__*/_jsxDEV(ImCheckmark, {\n          className: \"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(IoIosCloseCircleOutline, {\n          className: \"unchecked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          setEditTodo(todo.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          deleteTodo(todo.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      submitEdit(e, todo.id); // reset(inputRef);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-edit-input\",\n        placeholder: \"Type your edit\",\n        type: \"text\",\n        onChange: e => setET(e.target.value),\n        value: editingText,\n        ref: editRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-edit-button\",\n        type: \"submit\",\n        children: \"Submit Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}, \"txDM5r+JH7EST+Q/+fJj69+UyjU=\")), \"txDM5r+JH7EST+Q/+fJj69+UyjU=\");\n\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo$forwardRef\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/Todo.js"],"names":["React","forwardRef","useEffect","ImCheckmark","TiEdit","AiTwotoneDelete","IoIosCloseCircleOutline","Todo","todo","toggleComplete","submitEdit","deleteTodo","setET","editingText","setEditTodo","editTodo","editRef","useRef","current","focus","id","completed","text","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,uBAAT,QAAwC,gBAAxC;;;AAEA,MAAMC,IAAI,iCAAGN,UAAU,SACrB,QASM;AAAA;;AAAA,MATL;AACCO,IAAAA,IADD;AAECC,IAAAA,cAFD;AAGCC,IAAAA,UAHD;AAICC,IAAAA,UAJD;AAKCC,IAAAA,KALD;AAMCC,IAAAA,WAND;AAOCC,IAAAA,WAPD;AAQCC,IAAAA;AARD,GASK;AACJ,MAAIC,OAAO,GAAGC,MAAM,CAAC,IAAD,CAApB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAhB;AACD,GAFQ,CAAT;AAGA,SAAOJ,QAAQ,KAAKP,IAAI,CAACY,EAAlB,gBACL;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAEZ,IAAI,CAACa,SAAL,GAAiB,WAAjB,GAA+B,IAD5C;AAEE,MAAA,OAAO,EAAE,MAAMZ,cAAc,CAACD,IAAI,CAACY,EAAN,CAF/B;AAAA,gBAIGZ,IAAI,CAACc;AAJR;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,OAAO,EAAE,MAAMb,cAAc,CAACD,IAAI,CAACY,EAAN,CAF/B;AAGE,QAAA,OAAO,EAAEZ,IAAI,CAACa,SAHhB;AAAA,kBAKGb,IAAI,CAACa,SAAL,gBACC,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,uBAAD;AAAyB,UAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,WAAW,CAACN,IAAI,CAACY,EAAN,CAAX;AACD,SALH;AAAA,+BAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAZF,eAqBE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,UAAU,CAACH,IAAI,CAACY,EAAN,CAAV;AACD,SALH;AAAA,+BAOE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAA2BZ,IAAI,CAACY,EAAhC;AAAA;AAAA;AAAA;AAAA,UADK,gBA0CL;AAEE,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACfb,MAAAA,UAAU,CAACa,CAAD,EAAIf,IAAI,CAACY,EAAT,CAAV,CADe,CAEf;AACD,KALH;AAAA,2BAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOX,KAAK,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAJxB;AAKE,QAAA,KAAK,EAAEZ,WALT;AAME,QAAA,GAAG,EAAEG;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF,KACOR,IAAI,CAACY,EADZ;AAAA;AAAA;AAAA;AAAA,UA1CF;AAgED,CA/EoB,kCAAb,iCAAV;;MAAMb,I;AAkFN,eAAeA,IAAf","sourcesContent":["import React, { forwardRef, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\r\n\r\nconst Todo = forwardRef(\r\n  ({\r\n    todo,\r\n    toggleComplete,\r\n    submitEdit,\r\n    deleteTodo,\r\n    setET,\r\n    editingText,\r\n    setEditTodo,\r\n    editTodo,\r\n  }) => {\r\n    let editRef = useRef(null);\r\n    useEffect(() => {\r\n      editRef.current.focus();\r\n    });\r\n    return editTodo !== todo.id ? (\r\n      <div className=\"todo\" key={todo.id}>\r\n        <p\r\n          className={todo.completed ? \"completed\" : null}\r\n          onClick={() => toggleComplete(todo.id)}\r\n        >\r\n          {todo.text}\r\n          {/* {todo.id} */}\r\n        </p>\r\n        <div className=\"button-options\">\r\n          <div\r\n            className=\"checkbox\"\r\n            onClick={() => toggleComplete(todo.id)}\r\n            checked={todo.completed}\r\n          >\r\n            {todo.completed ? (\r\n              <ImCheckmark className=\"checked\" />\r\n            ) : (\r\n              <IoIosCloseCircleOutline className=\"unchecked\" />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"edit-todo-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setEditTodo(todo.id);\r\n            }}\r\n          >\r\n            <TiEdit />\r\n          </div>\r\n          <div\r\n            className=\"delete-todo-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteTodo(todo.id);\r\n            }}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <form\r\n        key={todo.id}\r\n        onSubmit={(e) => {\r\n          submitEdit(e, todo.id);\r\n          // reset(inputRef);\r\n        }}\r\n      >\r\n        <div className=\"todo-edit\">\r\n          <input\r\n            className=\"todo-edit-input\"\r\n            placeholder=\"Type your edit\"\r\n            type=\"text\"\r\n            onChange={(e) => setET(e.target.value)}\r\n            value={editingText}\r\n            ref={editRef}\r\n          />\r\n          <button className=\"todo-edit-button\" type=\"submit\">\r\n            Submit Edit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}