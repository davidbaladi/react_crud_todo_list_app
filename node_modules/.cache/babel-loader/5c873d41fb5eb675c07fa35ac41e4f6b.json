{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const [todoId, setTodoId] = useState(0);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a todo\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"tk2h5y3gAEaikyt712TDogIn4cY=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","todoId","setTodoId","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","clearTodos","setTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMW,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMS,YAAY,GAAIF,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACG,cAAF;AAEAd,IAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEnB;AAFO,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GARD;;AAUA,QAAMmB,UAAU,GAAG,MAAM;AACvBC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAA,cACGb,KAAK,CAACG,IAAN,gBACC;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAES,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,GAAG,EAAEH,QALP;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAA+B,QAAA,SAAS,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADD,gBAeC;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,YADd;AAEE,QAAA,KAAK,EAAEZ,KAFT;AAGE,QAAA,QAAQ,EAAES,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,YALZ;AAME,QAAA,GAAG,EAAEH;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA5DQd,Q;;KAAAA,Q;AA8DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const [todoId, setTodoId] = useState(0);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}