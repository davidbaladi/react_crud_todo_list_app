{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\Todo.js\";\nimport React, { forwardRef } from \"react\";\nimport \"./todo.css\";\nimport { ImCheckmark } from \"react-icons/im\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { AiTwotoneDelete } from \"react-icons/ai\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet editRef = useRef(null);\nuseEffect(() => {\n  editRef.current.focus();\n});\nconst Todo = /*#__PURE__*/forwardRef(_c = _ref => {\n  let {\n    todo,\n    toggleComplete,\n    submitEdit,\n    deleteTodo,\n    setET,\n    editingText,\n    setEditTodo,\n    editTodo\n  } = _ref;\n  return editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: todo.completed ? \"completed\" : null,\n      onClick: () => toggleComplete(todo.id),\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => toggleComplete(todo.id),\n        checked: todo.completed,\n        children: todo.completed ? /*#__PURE__*/_jsxDEV(ImCheckmark, {\n          className: \"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(IoIosCloseCircleOutline, {\n          className: \"unchecked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          setEditTodo(todo.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          deleteTodo(todo.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      submitEdit(e, todo.id); // reset(inputRef);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-edit-input\",\n        placeholder: \"Type your edit\",\n        type: \"text\",\n        onChange: e => setET(e.target.value),\n        value: editingText // ref={inputRef}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-edit-button\",\n        type: \"submit\",\n        children: \"Submit Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo$forwardRef\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/Todo.js"],"names":["React","forwardRef","ImCheckmark","TiEdit","AiTwotoneDelete","IoIosCloseCircleOutline","editRef","useRef","useEffect","current","focus","Todo","todo","toggleComplete","submitEdit","deleteTodo","setET","editingText","setEditTodo","editTodo","id","completed","text","e","target","value"],"mappings":"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","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport \"./todo.css\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\r\n\r\nlet editRef = useRef(null);\r\nuseEffect(() => {\r\n  editRef.current.focus();\r\n});\r\n\r\nconst Todo = forwardRef(\r\n  ({\r\n    todo,\r\n    toggleComplete,\r\n    submitEdit,\r\n    deleteTodo,\r\n    setET,\r\n    editingText,\r\n    setEditTodo,\r\n    editTodo,\r\n  }) => {\r\n    return editTodo !== todo.id ? (\r\n      <div className=\"todo\" key={todo.id}>\r\n        <p\r\n          className={todo.completed ? \"completed\" : null}\r\n          onClick={() => toggleComplete(todo.id)}\r\n        >\r\n          {todo.text}\r\n          {/* {todo.id} */}\r\n        </p>\r\n        <div className=\"button-options\">\r\n          <div\r\n            className=\"checkbox\"\r\n            onClick={() => toggleComplete(todo.id)}\r\n            checked={todo.completed}\r\n          >\r\n            {todo.completed ? (\r\n              <ImCheckmark className=\"checked\" />\r\n            ) : (\r\n              <IoIosCloseCircleOutline className=\"unchecked\" />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"edit-todo-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setEditTodo(todo.id);\r\n            }}\r\n          >\r\n            <TiEdit />\r\n          </div>\r\n          <div\r\n            className=\"delete-todo-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteTodo(todo.id);\r\n            }}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <form\r\n        key={todo.id}\r\n        onSubmit={(e) => {\r\n          submitEdit(e, todo.id);\r\n          // reset(inputRef);\r\n        }}\r\n      >\r\n        <div className=\"todo-edit\">\r\n          <input\r\n            className=\"todo-edit-input\"\r\n            placeholder=\"Type your edit\"\r\n            type=\"text\"\r\n            onChange={(e) => setET(e.target.value)}\r\n            value={editingText}\r\n            // ref={inputRef}\r\n          />\r\n          <button className=\"todo-edit-button\" type=\"submit\">\r\n            Submit Edit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}