{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./todo.css\";\nimport { ImCheckmark } from \"react-icons/im\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { AiTwotoneDelete } from \"react-icons/ai\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    toggleComplete,\n    submitEdit,\n    deleteTodo,\n    setET,\n    editingText,\n    setEditTodo,\n    editTodo,\n    refState,\n    setRef,\n    inputRef,\n    getNewRef\n  } = _ref;\n  const editRef = useRef(null);\n  console.log(editRef);\n  useEffect(() => {\n    if (refState === \"edit\") {\n      editRef.current.focus();\n    }\n  }, [refState]);\n  return editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: todo.completed ? \"completed\" : null,\n      onClick: () => toggleComplete(todo.id),\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => toggleComplete(todo.id),\n        checked: todo.completed,\n        children: todo.completed ? /*#__PURE__*/_jsxDEV(ImCheckmark, {\n          className: \"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(IoIosCloseCircleOutline, {\n          className: \"unchecked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          setEditTodo(todo.id);\n          setRef(\"edit\");\n        },\n        children: /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-todo-button\",\n        type: \"button\",\n        onClick: () => deleteTodo(todo.id),\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      submitEdit(e, todo.id);\n      setRef(\"input\");\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-edit-input\",\n        placeholder: \"Type your edit\",\n        type: \"text\",\n        onChange: e => setET(e.target.value),\n        value: editingText,\n        ref: editRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-edit-button\",\n        type: \"submit\",\n        onSubmit: () => setRef(editRef),\n        children: \"Submit Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"txDM5r+JH7EST+Q/+fJj69+UyjU=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/Todo.js"],"names":["React","useEffect","useRef","ImCheckmark","TiEdit","AiTwotoneDelete","IoIosCloseCircleOutline","Todo","todo","toggleComplete","submitEdit","deleteTodo","setET","editingText","setEditTodo","editTodo","refState","setRef","inputRef","getNewRef","editRef","console","log","current","focus","id","completed","text","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./todo.css\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\r\n\r\nconst Todo = ({\r\n  todo,\r\n  toggleComplete,\r\n  submitEdit,\r\n  deleteTodo,\r\n  setET,\r\n  editingText,\r\n  setEditTodo,\r\n  editTodo,\r\n  refState,\r\n  setRef,\r\n  inputRef,\r\n  getNewRef,\r\n}) => {\r\n  const editRef = useRef(null);\r\n  console.log(editRef);\r\n\r\n  useEffect(() => {\r\n    if (refState === \"edit\") {\r\n      editRef.current.focus();\r\n    }\r\n  }, [refState]);\r\n\r\n  return editTodo !== todo.id ? (\r\n    <div className=\"todo\" key={todo.id}>\r\n      <p\r\n        className={todo.completed ? \"completed\" : null}\r\n        onClick={() => toggleComplete(todo.id)}\r\n      >\r\n        {todo.text}\r\n        {/* {todo.id} */}\r\n      </p>\r\n      <div className=\"button-options\">\r\n        <div\r\n          className=\"checkbox\"\r\n          onClick={() => toggleComplete(todo.id)}\r\n          checked={todo.completed}\r\n        >\r\n          {todo.completed ? (\r\n            <ImCheckmark className=\"checked\" />\r\n          ) : (\r\n            <IoIosCloseCircleOutline className=\"unchecked\" />\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"edit-todo-button\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setEditTodo(todo.id);\r\n            setRef(\"edit\");\r\n          }}\r\n        >\r\n          <TiEdit />\r\n        </div>\r\n        <div\r\n          className=\"delete-todo-button\"\r\n          type=\"button\"\r\n          onClick={() => deleteTodo(todo.id)}\r\n        >\r\n          <AiTwotoneDelete />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <form\r\n      key={todo.id}\r\n      onSubmit={(e) => {\r\n        submitEdit(e, todo.id);\r\n        setRef(\"input\");\r\n      }}\r\n    >\r\n      <div className=\"todo-edit\">\r\n        <input\r\n          className=\"todo-edit-input\"\r\n          placeholder=\"Type your edit\"\r\n          type=\"text\"\r\n          onChange={(e) => setET(e.target.value)}\r\n          value={editingText}\r\n          ref={editRef}\r\n        />\r\n        <button\r\n          className=\"todo-edit-button\"\r\n          type=\"submit\"\r\n          onSubmit={() => setRef(editRef)}\r\n        >\r\n          Submit Edit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}