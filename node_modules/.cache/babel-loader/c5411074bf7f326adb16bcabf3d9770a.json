{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./todo.css\";\nimport { ImCheckmark } from \"react-icons/im\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { AiTwotoneDelete } from \"react-icons/ai\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    toggleComplete,\n    submitEdit,\n    deleteTodo,\n    setET,\n    editingText,\n    setEditTodo,\n    editTodo,\n    focus,\n    setFocus\n  } = _ref;\n  var value = todo.tmpRef.target.value;\n  console.log(\"value:\" + value);\n  var value = useRef(null);\n  useEffect(() => {\n    if (focus === false) value.current.focus();\n  });\n  return editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: todo.completed ? \"completed\" : null,\n      onClick: () => toggleComplete(todo.id),\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => toggleComplete(todo.id),\n        checked: todo.completed,\n        children: todo.completed ? /*#__PURE__*/_jsxDEV(ImCheckmark, {\n          className: \"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(IoIosCloseCircleOutline, {\n          className: \"unchecked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          setEditTodo(todo.id);\n          setFocus(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-todo-button\",\n        type: \"button\",\n        onClick: () => {\n          deleteTodo(todo.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      submitEdit(e, todo.id);\n      setFocus(true);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-edit-input\",\n        placeholder: \"Type your edit\",\n        type: \"text\",\n        onChange: e => setET(e.target.value),\n        value: editingText,\n        ref: focus ? null : value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-edit-button\",\n        type: \"submit\",\n        children: \"Submit Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"VnUwDKEejRyAq2JGYJp3mp/4CNc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/Todo.js"],"names":["React","useEffect","useRef","ImCheckmark","TiEdit","AiTwotoneDelete","IoIosCloseCircleOutline","Todo","todo","toggleComplete","submitEdit","deleteTodo","setET","editingText","setEditTodo","editTodo","focus","setFocus","value","tmpRef","target","console","log","current","id","completed","text","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./todo.css\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\r\n\r\nconst Todo = ({\r\n  todo,\r\n  toggleComplete,\r\n  submitEdit,\r\n  deleteTodo,\r\n  setET,\r\n  editingText,\r\n  setEditTodo,\r\n  editTodo,\r\n  focus,\r\n  setFocus,\r\n}) => {\r\n  var value = todo.tmpRef.target.value;\r\n  console.log(\"value:\" + value);\r\n\r\n  var value = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (focus === false) value.current.focus();\r\n  });\r\n\r\n  return editTodo !== todo.id ? (\r\n    <div className=\"todo\" key={todo.id}>\r\n      <p\r\n        className={todo.completed ? \"completed\" : null}\r\n        onClick={() => toggleComplete(todo.id)}\r\n      >\r\n        {todo.text}\r\n        {/* {todo.id} */}\r\n      </p>\r\n      <div className=\"button-options\">\r\n        <div\r\n          className=\"checkbox\"\r\n          onClick={() => toggleComplete(todo.id)}\r\n          checked={todo.completed}\r\n        >\r\n          {todo.completed ? (\r\n            <ImCheckmark className=\"checked\" />\r\n          ) : (\r\n            <IoIosCloseCircleOutline className=\"unchecked\" />\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"edit-todo-button\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setEditTodo(todo.id);\r\n            setFocus(false);\r\n          }}\r\n        >\r\n          <TiEdit />\r\n        </div>\r\n        <div\r\n          className=\"delete-todo-button\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            deleteTodo(todo.id);\r\n          }}\r\n        >\r\n          <AiTwotoneDelete />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <form\r\n      key={todo.id}\r\n      onSubmit={(e) => {\r\n        submitEdit(e, todo.id);\r\n        setFocus(true);\r\n      }}\r\n    >\r\n      <div className=\"todo-edit\">\r\n        <input\r\n          className=\"todo-edit-input\"\r\n          placeholder=\"Type your edit\"\r\n          type=\"text\"\r\n          onChange={(e) => setET(e.target.value)}\r\n          value={editingText}\r\n          ref={focus ? null : value}\r\n        />\r\n        <button className=\"todo-edit-button\" type=\"submit\">\r\n          Submit Edit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}