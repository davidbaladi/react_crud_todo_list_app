{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\components\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/todo-app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoApp = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, editedTodo) => {\n    if (!editedTodo.text || /^\\s*$/.test(editedTodo.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? editedTodo : item));\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-title\",\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"todo-input\",\n          className: \"input-label\",\n          children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"To-Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 22\n          }, this), \" item:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-todo-input\",\n          name: \"todo-input\",\n          type: \"text\",\n          placeholder: \"ex: vacuum living room\",\n          onChange: e => setInput(e.target.value),\n          value: input,\n          ref: focus ? inputRef : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-todo-button\",\n          children: \"Add To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      todo: todo,\n      toggleComplete: toggleComplete,\n      submitEdit: submitEdit,\n      deleteTodo: deleteTodo,\n      setET: setET,\n      editingText: editingText,\n      setEditTodo: setEditTodo,\n      editTodo: editTodo,\n      focus: focus,\n      setFocus: setFocus\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: clearTodos,\n      className: \"clear-button\",\n      children: \"Clear Entire To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoApp, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/TodoApp.js"],"names":["React","useState","useEffect","useRef","TodoApp","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","editedTodo","prev","map","item","id","deleteTodo","updatedTodos","filter","completeTodo","isComplete","e","setInput","target","value","input","focus","inputRef","toggleComplete","submitEdit","setET","editingText","setEditTodo","editTodo","setFocus","clearTodos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../styles/todo-app.css\";\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n  const updateTodo = (todoId, editedTodo) => {\r\n    if (!editedTodo.text || /^\\s*$/.test(editedTodo.text)) {\r\n      return;\r\n    }\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? editedTodo : item))\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <div className=\"app-title\">What's the Plan for Today?</div>\r\n      <form onSubmit={addTodo}>\r\n        <div className=\"add-todo\">\r\n          <label htmlFor=\"todo-input\" className=\"input-label\">\r\n            Add your <u>To-Do</u> item:\r\n          </label>\r\n          <input\r\n            className=\"add-todo-input\"\r\n            name=\"todo-input\"\r\n            type=\"text\"\r\n            placeholder=\"ex: vacuum living room\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            value={input}\r\n            ref={focus ? inputRef : null}\r\n          />\r\n          <button type=\"submit\" className=\"add-todo-button\">\r\n            Add To-Do\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          key={todo.id}\r\n          todos={todos}\r\n          todo={todo}\r\n          toggleComplete={toggleComplete}\r\n          submitEdit={submitEdit}\r\n          deleteTodo={deleteTodo}\r\n          setET={setET}\r\n          editingText={editingText}\r\n          setEditTodo={setEditTodo}\r\n          editTodo={editTodo}\r\n          focus={focus}\r\n          setFocus={setFocus}\r\n        />\r\n      ))}\r\n      <div onClick={clearTodos} className=\"clear-button\">\r\n        Clear Entire To-Do List\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}