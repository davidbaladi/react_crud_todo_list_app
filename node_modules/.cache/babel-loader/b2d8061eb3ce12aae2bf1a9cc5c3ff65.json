{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\Todo.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = todo => {\n  return editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todo.text, todo.id, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => toggleComplete(todo.id),\n      checked: todo.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEditTodo(todo.id);\n        setRefState(\"edit\");\n        setIsEditing(true);\n      },\n      children: \"Edit To-Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTodo(todo.id),\n      children: \"Delete To-Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setEditingText(e.target.value),\n      value: editingText,\n      ref: editRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: isEditing ? \"submit\" : null,\n      onClick: () => {\n        submitEdit(todo.id);\n        setRefState(\"input\");\n      },\n      children: \"Submit Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/Todo.js"],"names":["React","Todo","todo","editTodo","id","text","toggleComplete","completed","setEditTodo","setRefState","setIsEditing","deleteTodo","e","setEditingText","target","value","editingText","editRef","isEditing","submitEdit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAIC,IAAD,IAAU;AACrB,SAAOC,QAAQ,KAAKD,IAAI,CAACE,EAAlB,gBACL;AAAA,eACGF,IAAI,CAACG,IADR,EAEGH,IAAI,CAACE,EAFR,eAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE,MAAME,cAAc,CAACJ,IAAI,CAACE,EAAN,CAFhC;AAGE,MAAA,OAAO,EAAEF,IAAI,CAACK;AAHhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,WAAW,CAACN,IAAI,CAACE,EAAN,CAAX;AACAK,QAAAA,WAAW,CAAC,MAAD,CAAX;AACAC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAiBE;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACT,IAAI,CAACE,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAqBL;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAGQ,CAAD,IAAOC,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAFjC;AAGE,MAAA,KAAK,EAAEC,WAHT;AAIE,MAAA,GAAG,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAEC,SAAS,GAAG,QAAH,GAAc,IAD/B;AAEE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,UAAU,CAACjB,IAAI,CAACE,EAAN,CAAV;AACAK,QAAAA,WAAW,CAAC,OAAD,CAAX;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UArBF;AAuCD,CAxCD;;KAAMR,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Todo = (todo) => {\r\n  return editTodo !== todo.id ? (\r\n    <div>\r\n      {todo.text}\r\n      {todo.id}\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={() => toggleComplete(todo.id)}\r\n        checked={todo.completed}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          setEditTodo(todo.id);\r\n          setRefState(\"edit\");\r\n          setIsEditing(true);\r\n        }}\r\n      >\r\n        Edit To-Do\r\n      </button>\r\n      <button onClick={() => deleteTodo(todo.id)}>Delete To-Do</button>\r\n    </div>\r\n  ) : (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setEditingText(e.target.value)}\r\n        value={editingText}\r\n        ref={editRef}\r\n      />\r\n      <button\r\n        type={isEditing ? \"submit\" : null}\r\n        onClick={() => {\r\n          submitEdit(todo.id);\r\n          setRefState(\"input\");\r\n        }}\r\n      >\r\n        Submit Edit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}