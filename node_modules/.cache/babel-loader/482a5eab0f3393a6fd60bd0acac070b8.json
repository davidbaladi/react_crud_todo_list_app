{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\components\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [isEditing, setIsEditing] = useState(0);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoId, editTodo) => {\n    if (!editTodo.text || /^\\s*$/.test(editTodo.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? editTodo : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      setIsEditing: setIsEditing,\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isEditing ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: clearTodos,\n      children: \"Clear Your To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoApp, \"qaQmdJ7why5lgYf7eKAKAHuH6Yk=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/TodoApp.js"],"names":["React","useState","TodoForm","Todo","TodoApp","todos","setTodos","isEditing","setIsEditing","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","editTodo","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete","clearTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMQ,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGL,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,GAAGL,KAArB;AACD,GATD;;AAWA,QAAMW,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACP,IAAV,IAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDL,IAAAA,QAAQ,CAAEa,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADM,CAAR;AAGD,GARD;;AAUA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACzB,UAAME,UAAU,GAAG,CAAC,GAAGnB,KAAJ,EAAWoB,MAAX,CAAmBf,IAAD,IAAUA,IAAI,CAACY,EAAL,KAAYA,EAAxC,CAAnB;AAEAhB,IAAAA,QAAQ,CAACkB,UAAD,CAAR;AACD,GAJD;;AAMA,QAAME,YAAY,GAAIJ,EAAD,IAAQ;AAC3B,QAAIK,YAAY,GAAGtB,KAAK,CAACe,GAAN,CAAWV,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACY,EAAL,KAAYA,EAAhB,EAAoB;AAClBZ,QAAAA,IAAI,CAACkB,UAAL,GAAkB,CAAClB,IAAI,CAACkB,UAAxB;AACD;;AACD,aAAOlB,IAAP;AACD,KALkB,CAAnB;AAMAJ,IAAAA,QAAQ,CAACqB,YAAD,CAAR;AACD,GARD;;AAUA,QAAME,UAAU,GAAG,MAAM;AACvBvB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEG,OAApB;AAA6B,MAAA,YAAY,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,YAAY,EAAEA,YADhB;AAEE,MAAA,KAAK,EAAEH,KAFT;AAGE,MAAA,YAAY,EAAEqB,YAHhB;AAIE,MAAA,UAAU,EAAEH,UAJd;AAKE,MAAA,UAAU,EAAEP;AALd;AAAA;AAAA;AAAA;AAAA,YAHF,EAUGT,SAAS,GAAG,IAAH,gBAAU;AAAK,MAAA,OAAO,EAAEsB,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVtB;AAAA,kBADF;AAcD;;GA3DQzB,O;;KAAAA,O;AA6DT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(0);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(todo, ...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, editTodo) => {\r\n    if (!editTodo.text || /^\\s*$/.test(editTodo.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? editTodo : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} setIsEditing={setIsEditing} />\r\n      <Todo\r\n        setIsEditing={setIsEditing}\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n      {isEditing ? null : <div onClick={clearTodos}>Clear Your To-do List</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}