{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { ImCheckmark } from \"react-icons/im\";\nimport { AiTwotoneDelete } from \"react-icons/ai\";\nimport { TiEdit } from \"react-icons/ti\";\nimport \"../styles/todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo,\n    setIsEditing\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n    setIsEditing(0);\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? \"todo-row complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => completeTodo(todo.id),\n      className: todo.isComplete ? \"completed\" : null,\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => completeTodo(todo.id),\n        children: todo.isComplete ? /*#__PURE__*/_jsxDEV(ImCheckmark, {\n          className: \"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n          className: \"unchecked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-todo-button\",\n        onClick: () => {\n          setEdit({\n            id: todo.id,\n            value: todo.text\n          });\n          setIsEditing(1);\n        },\n        children: /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-todo-button\",\n        onClick: () => removeTodo(todo.id),\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Todo, \"Pi1ai0UKfwOWL0A5OHPvwHxg7To=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","ImCheckmark","AiTwotoneDelete","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","setIsEditing","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport \"../styles/todo.css\";\r\n\r\nconst Todo = ({\r\n  todos,\r\n  completeTodo,\r\n  removeTodo,\r\n  updateTodo,\r\n  setIsEditing,\r\n}) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n    setIsEditing(0);\r\n  };\r\n\r\n  if (edit.id) {\r\n    return (\r\n      <TodoForm\r\n        edit={edit}\r\n        onSubmit={submitUpdate}\r\n        setIsEditing={setIsEditing}\r\n      />\r\n    );\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <p\r\n        key={todo.id}\r\n        onClick={() => completeTodo(todo.id)}\r\n        className={todo.isComplete ? \"completed\" : null}\r\n      >\r\n        {todo.text}\r\n      </p>\r\n      <div className=\"button-options\">\r\n        <div className=\"checkbox\" onClick={() => completeTodo(todo.id)}>\r\n          {todo.isComplete ? (\r\n            <ImCheckmark className=\"checked\" />\r\n          ) : (\r\n            <RiCloseCircleLine className=\"unchecked\" />\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"edit-todo-button\"\r\n          onClick={() => {\r\n            setEdit({ id: todo.id, value: todo.text });\r\n            setIsEditing(1);\r\n          }}\r\n        >\r\n          <TiEdit />\r\n        </div>\r\n        <div className=\"delete-todo-button\" onClick={() => removeTodo(todo.id)}>\r\n          <AiTwotoneDelete />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}