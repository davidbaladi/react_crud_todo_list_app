{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/todo-app.css\";\n\nconst TodoApp = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }; // return (\n  //   <div className=\"todo-app\">\n  //     <div className=\"app-title\">What's the Plan for Today?</div>\n  //     <form onSubmit={addTodo}>\n  //       <div className=\"add-todo\">\n  //         <label htmlFor=\"todo-input\" className=\"input-label\">\n  //           Add your <u>To-Do</u> item:\n  //         </label>\n  //         <input\n  //           className=\"add-todo-input\"\n  //           name=\"todo-input\"\n  //           type=\"text\"\n  //           placeholder=\"ex: vacuum living room\"\n  //           onChange={(e) => setInput(e.target.value)}\n  //           value={input}\n  //           ref={focus ? inputRef : null}\n  //         />\n  //         <button type=\"submit\" className=\"add-todo-button\">\n  //           Add To-Do\n  //         </button>\n  //       </div>\n  //     </form>\n  //     {todos.map((todo) => (\n  //       <Todo\n  //         key={todo.id}\n  //         todos={todos}\n  //         todo={todo}\n  //         toggleComplete={toggleComplete}\n  //         submitEdit={submitEdit}\n  //         deleteTodo={deleteTodo}\n  //         setET={setET}\n  //         editingText={editingText}\n  //         setEditTodo={setEditTodo}\n  //         editTodo={editTodo}\n  //         focus={focus}\n  //         setFocus={setFocus}\n  //       />\n  //     ))}\n  //     <div onClick={clearTodos} className=\"clear-button\">\n  //       Clear Entire To-Do List\n  //     </div>\n  //   </div>\n  // );\n\n};\n\n_s(TodoApp, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/TodoApp.js"],"names":["React","useState","useEffect","useRef","TodoApp","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","deleteTodo","updatedTodos","filter","completeTodo","isComplete"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,wBAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGR,KAAf;AACD,GAPD;;AAQA,QAAMS,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACP,IAAV,IAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDH,IAAAA,QAAQ,CAAEW,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADM,CAAR;AAGD,GARD;;AAUA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACzB,UAAME,YAAY,GAAG,CAAC,GAAGjB,KAAJ,EAAWkB,MAAX,CAAmBf,IAAD,IAAUA,IAAI,CAACY,EAAL,KAAYA,EAAxC,CAArB;AACAd,IAAAA,QAAQ,CAACgB,YAAD,CAAR;AACD,GAHD;;AAKA,QAAME,YAAY,GAAIJ,EAAD,IAAQ;AAC3B,QAAIE,YAAY,GAAGjB,KAAK,CAACa,GAAN,CAAWV,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACY,EAAL,KAAYA,EAAhB,EAAoB;AAClBZ,QAAAA,IAAI,CAACiB,UAAL,GAAkB,CAACjB,IAAI,CAACiB,UAAxB;AACD;;AACD,aAAOjB,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACgB,YAAD,CAAR;AACD,GARD,CA1BoB,CAmCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA9ED;;GAAMlB,O;;KAAAA,O;AAgFN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../styles/todo-app.css\";\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n  // return (\r\n  //   <div className=\"todo-app\">\r\n  //     <div className=\"app-title\">What's the Plan for Today?</div>\r\n  //     <form onSubmit={addTodo}>\r\n  //       <div className=\"add-todo\">\r\n  //         <label htmlFor=\"todo-input\" className=\"input-label\">\r\n  //           Add your <u>To-Do</u> item:\r\n  //         </label>\r\n  //         <input\r\n  //           className=\"add-todo-input\"\r\n  //           name=\"todo-input\"\r\n  //           type=\"text\"\r\n  //           placeholder=\"ex: vacuum living room\"\r\n  //           onChange={(e) => setInput(e.target.value)}\r\n  //           value={input}\r\n  //           ref={focus ? inputRef : null}\r\n  //         />\r\n  //         <button type=\"submit\" className=\"add-todo-button\">\r\n  //           Add To-Do\r\n  //         </button>\r\n  //       </div>\r\n  //     </form>\r\n  //     {todos.map((todo) => (\r\n  //       <Todo\r\n  //         key={todo.id}\r\n  //         todos={todos}\r\n  //         todo={todo}\r\n  //         toggleComplete={toggleComplete}\r\n  //         submitEdit={submitEdit}\r\n  //         deleteTodo={deleteTodo}\r\n  //         setET={setET}\r\n  //         editingText={editingText}\r\n  //         setEditTodo={setEditTodo}\r\n  //         editTodo={editTodo}\r\n  //         focus={focus}\r\n  //         setFocus={setFocus}\r\n  //       />\r\n  //     ))}\r\n  //     <div onClick={clearTodos} className=\"clear-button\">\r\n  //       Clear Entire To-Do List\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}