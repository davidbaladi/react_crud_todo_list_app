{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [editTodo, setEditTodo] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [refState, setRefState] = useState(\"input\");\n  const [todoId, setTodoId] = useState(0);\n  useEffect(() => {\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  const inputRef = useRef(null);\n  const editRef = useRef(null);\n  useEffect(() => {\n    if (refState === \"input\") {\n      inputRef.current.focus();\n    } else {\n      editRef.current.focus();\n    }\n  }, [refState]);\n\n  const addTodo = e => {\n    e.preventDefault();\n    const newTodo = {\n      id: todos.length + 1,\n      text: input,\n      completed: false\n    };\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    console.log(todos);\n  };\n\n  const submitEdit = id => {\n    console.log(inputRef.current);\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTodo(null);\n    setEditingText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todo-input\",\n        children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this), \" item:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"todo-input\",\n        type: \"text\",\n        placeholder: \"Enter Text Here!\",\n        onChange: e => setInput(e.target.value),\n        value: input,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editTodo !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [todo.text, todo.id, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => toggleComplete(todo.id),\n          checked: todo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditTodo(todo.id);\n            setRefState(\"edit\");\n          },\n          children: \"Edit To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value),\n          value: editingText,\n          ref: editRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            submitEdit(todo.id);\n            setRefState(\"input\");\n          },\n          children: \"Submit Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(App, \"kybAEqmsAvyEVpJzJzN4uTDbmJo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/App.js"],"names":["React","useState","useEffect","useRef","App","todos","setTodos","input","setInput","editTodo","setEditTodo","editingText","setEditingText","refState","setRefState","todoId","setTodoId","loadedTodos","JSON","parse","localStorage","getItem","setItem","stringify","inputRef","editRef","current","focus","addTodo","e","preventDefault","newTodo","id","length","text","completed","concat","deleteTodo","updatedTodos","filter","todo","toggleComplete","map","console","log","submitEdit","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [editTodo, setEditTodo] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n  const [refState, setRefState] = useState(\"input\");\r\n  const [todoId, setTodoId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const inputRef = useRef(null);\r\n  const editRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (refState === \"input\") {\r\n      inputRef.current.focus();\r\n    } else {\r\n      editRef.current.focus();\r\n    }\r\n  }, [refState]);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    const newTodo = {\r\n      id: todos.length + 1,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    console.log(todos);\r\n  };\r\n\r\n  const submitEdit = (id) => {\r\n    console.log(inputRef.current);\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.text = editingText;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    setEditTodo(null);\r\n    setEditingText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addTodo}>\r\n        <label htmlFor=\"todo-input\">\r\n          Add your <u>To-Do</u> item:\r\n        </label>\r\n        <input\r\n          name=\"todo-input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Text Here!\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n          ref={inputRef}\r\n        />\r\n        <button type=\"submit\">Add To-Do</button>\r\n      </form>\r\n\r\n      {todos.map((todo) => (\r\n        <div key={todo.id}>\r\n          {editTodo !== todo.id ? (\r\n            <div>\r\n              {todo.text}\r\n              {todo.id}\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => toggleComplete(todo.id)}\r\n                checked={todo.completed}\r\n              />\r\n              <button\r\n                onClick={() => {\r\n                  setEditTodo(todo.id);\r\n                  setRefState(\"edit\");\r\n                }}\r\n              >\r\n                Edit To-Do\r\n              </button>\r\n              <button onClick={() => deleteTodo(todo.id)}>Delete To-Do</button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setEditingText(e.target.value)}\r\n                value={editingText}\r\n                ref={editRef}\r\n              />\r\n              <button\r\n                onClick={() => {\r\n                  submitEdit(todo.id);\r\n                  setRefState(\"input\");\r\n                }}\r\n              >\r\n                Submit Edit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}