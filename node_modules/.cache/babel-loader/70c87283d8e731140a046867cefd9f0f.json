{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const addTodo = e => {\n    e.preventDefault(); // console.log(e);\n\n    const newTodo = {\n      id: todos.length + 1,\n      text: input,\n      completed: false\n    };\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    console.log(todos);\n  };\n\n  const editTodo = id => {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTodo,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"input\",\n      children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this), \" item:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"input\",\n        type: \"text\",\n        placeholder: \"Add your To-Do here!\",\n        onChange: e => {\n          //   console.log(e);\n          setInput(e.target.value);\n        },\n        value: input,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add To-Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => toggleComplete(todo.id),\n          checked: todo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editTodo(todo.id),\n          children: \"Edit To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7+OVw7oQaAcuKPVQJl07ulOY5XM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/App.js"],"names":["React","useState","useEffect","useRef","App","todos","setTodos","input","setInput","isEditing","setIsEditing","inputRef","current","focus","addTodo","e","preventDefault","newTodo","id","length","text","completed","concat","deleteTodo","updatedTodos","filter","todo","toggleComplete","map","console","log","editTodo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMU,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF,GADqB,CAGrB;;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEb,KAAK,CAACc,MAAN,GAAe,CADL;AAEdC,MAAAA,IAAI,EAAEb,KAFQ;AAGdc,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAMAf,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWiB,MAAX,CAAkBL,OAAlB,CAAD,CAAR;AACAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAbD;;AAeA,QAAMe,UAAU,GAAIL,EAAD,IAAQ;AACzB,UAAMM,YAAY,GAAG,CAAC,GAAGnB,KAAJ,EAAWoB,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAAxC,CAArB;AACAZ,IAAAA,QAAQ,CAACkB,YAAD,CAAR;AACD,GAHD;;AAKA,QAAMG,cAAc,GAAIT,EAAD,IAAQ;AAC7B,UAAMM,YAAY,GAAG,CAAC,GAAGnB,KAAJ,EAAWuB,GAAX,CAAgBF,IAAD,IAAU;AAC5C,UAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;AAClBQ,QAAAA,IAAI,CAACL,SAAL,GAAiB,CAACK,IAAI,CAACL,SAAvB;AACD;;AACD,aAAOK,IAAP;AACD,KALoB,CAArB;AAMApB,IAAAA,QAAQ,CAACkB,YAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAZ;AACD,GATD;;AAWA,QAAM0B,QAAQ,GAAIb,EAAD,IAAQ,CAAE,CAA3B;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,OAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA,2CACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADX,yBAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,sBAHd;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACf;AACAP,UAAAA,QAAQ,CAACO,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAR;AACD,SAPH;AAQE,QAAA,KAAK,EAAE1B,KART;AASE,QAAA,GAAG,EAAEI;AATP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE;AAAA,gBACGN,KAAK,CAACuB,GAAN,CAAWF,IAAD,iBACT;AAAA,mBACGA,IAAI,CAACN,IADR,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,QAAQ,EAAE,MAAMO,cAAc,CAACD,IAAI,CAACR,EAAN,CAFhC;AAGE,UAAA,OAAO,EAAEQ,IAAI,CAACL;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAMU,QAAQ,CAACL,IAAI,CAACR,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAQ,UAAA,OAAO,EAAE,MAAMK,UAAU,CAACG,IAAI,CAACR,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAASQ,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA9ED;;GAAMd,G;;KAAAA,G;AAgFN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(e);\r\n\r\n    const newTodo = {\r\n      id: todos.length + 1,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    console.log(todos);\r\n  };\r\n\r\n  const editTodo = (id) => {};\r\n\r\n  return (\r\n    <form onSubmit={addTodo}>\r\n      <label htmlFor=\"input\">\r\n        Add your <u>To-Do</u> item:\r\n        <input\r\n          name=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"Add your To-Do here!\"\r\n          onChange={(e) => {\r\n            //   console.log(e);\r\n            setInput(e.target.value);\r\n          }}\r\n          value={input}\r\n          ref={inputRef}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add To-Do</button>\r\n\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>\r\n            {todo.text}\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={() => toggleComplete(todo.id)}\r\n              checked={todo.completed}\r\n            />\r\n            <button onClick={() => editTodo(todo.id)}>Edit To-Do</button>\r\n            <button onClick={() => deleteTodo(todo.id)}>Delete To-Do</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}