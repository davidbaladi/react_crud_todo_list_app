{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [refState, setRefState] = useState(\"input\");\n  const [todoId, setTodoId] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n      setTodoId(loadedTodoIds);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\n  }, [todos, todoId]);\n  const inputRef = useRef(null);\n  const editRef = useRef(null);\n  useEffect(() => {\n    if (refState === \"input\") {\n      inputRef.current.focus();\n    } else {\n      editRef.current.focus();\n    }\n  }, [refState]);\n\n  const addTodo = e => {\n    e.preventDefault();\n    const newTodo = {\n      id: todoId,\n      text: input,\n      completed: false\n    };\n    setTodoId(todoId + 1);\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const submitEdit = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTodo(null);\n    setEditingText(\"\");\n    setIsEditing(false);\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n    setTodoId(0);\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todo-input\",\n        className: \"form-label\",\n        children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }, this), \" item:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        name: \"todo-input\",\n        type: \"text\",\n        placeholder: \"Enter Text Here!\",\n        onChange: e => setInput(e.target.value),\n        value: input,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      ref: editRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTodos,\n      children: \"Clear Entire To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"i8rkvvbeJE2fB9iYLfwKV3u0VPI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/App.js"],"names":["React","useState","useEffect","useRef","Todo","App","input","setInput","todos","setTodos","editTodo","setEditTodo","editingText","setEditingText","refState","setRefState","todoId","setTodoId","isEditing","setIsEditing","loadedTodos","JSON","parse","localStorage","getItem","loadedTodoIds","setItem","stringify","inputRef","editRef","current","focus","addTodo","e","preventDefault","newTodo","id","text","completed","concat","deleteTodo","updatedTodos","filter","todo","toggleComplete","map","submitEdit","clearTodos","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst App = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const [editTodo, setEditTodo] = useState(null);\r\n\r\n  const [editingText, setEditingText] = useState(\"\");\r\n  const [refState, setRefState] = useState(\"input\");\r\n  const [todoId, setTodoId] = useState(0);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n      setTodoId(loadedTodoIds);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\r\n  }, [todos, todoId]);\r\n\r\n  const inputRef = useRef(null);\r\n  const editRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (refState === \"input\") {\r\n      inputRef.current.focus();\r\n    } else {\r\n      editRef.current.focus();\r\n    }\r\n  }, [refState]);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    const newTodo = {\r\n      id: todoId,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n    setTodoId(todoId + 1);\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const submitEdit = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.text = editingText;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    setEditTodo(null);\r\n    setEditingText(\"\");\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n    setTodoId(0);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addTodo}>\r\n        <label htmlFor=\"todo-input\" className=\"form-label\">\r\n          Add your <u>To-Do</u> item:\r\n        </label>\r\n\r\n        <input\r\n          className=\"todo-input\"\r\n          name=\"todo-input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Text Here!\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n          ref={inputRef}\r\n        />\r\n        <button type=\"submit\">Add To-Do</button>\r\n      </form>\r\n\r\n      {todos.map((todo) => (\r\n        <Todo todo={todo} ref={editRef} />\r\n      ))}\r\n      <button onClick={clearTodos}>Clear Entire To-Do List</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}