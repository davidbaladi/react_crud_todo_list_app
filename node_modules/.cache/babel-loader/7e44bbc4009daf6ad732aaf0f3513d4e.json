{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = todo => {\n    e.preventDefault();\n\n    if (!todo.text) {\n      console.log(todo.text);\n    }\n\n    const newTodo = {\n      id: todos.length + 1,\n      text: input,\n      completed: false\n    };\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this), \" item:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"input\",\n          type: \"text\",\n          placeholder: \"Add your To-Do here!\",\n          onChange: e => setInput(e.target.value),\n          value: input,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fruafOOlm4ej/x5vQyHLzqUb8xQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/App.js"],"names":["React","useState","useEffect","useRef","App","todos","setTodos","input","setInput","inputRef","current","focus","handleSubmit","todo","e","preventDefault","text","console","log","newTodo","id","length","completed","concat","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACF,IAAI,CAACG,IAAV,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,IAAjB;AACD;;AAED,UAAMG,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEf,KAAK,CAACgB,MAAN,GAAe,CADL;AAEdL,MAAAA,IAAI,EAAET,KAFQ;AAGde,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAMAhB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWkB,MAAX,CAAkBJ,OAAlB,CAAD,CAAR;AACAX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAfD;;AAiBA,sBACE;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,6CACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX,yBAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,sBAHd;AAIE,UAAA,QAAQ,EAAGE,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAJ3B;AAKE,UAAA,KAAK,EAAElB,KALT;AAME,UAAA,GAAG,EAAEE;AANP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CD;;GAAML,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleSubmit = (todo) => {\r\n    e.preventDefault();\r\n\r\n    if (!todo.text) {\r\n      console.log(todo.text);\r\n    }\r\n\r\n    const newTodo = {\r\n      id: todos.length + 1,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <>\r\n        <label htmlFor=\"input\">\r\n          Add your <u>To-Do</u> item:\r\n          <input\r\n            name=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Add your To-Do here!\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            value={input}\r\n            ref={inputRef}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add To-Do</button>\r\n      </>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}