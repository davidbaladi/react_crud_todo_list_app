{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./TodoApp.css\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoApp = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [editTodo, setEditTodo] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [refState, setRefState] = useState(\"input\");\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (refState === \"input\") {\n      inputRef.current.focus();\n    }\n  }, [refState]);\n\n  const setRef = ref => {\n    setRefState(ref);\n  };\n\n  const setET = text => {\n    setEditingText(text);\n  };\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n      setTodoId(loadedTodoIds);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\n  }, [todos, todoId]);\n\n  const addTodo = e => {\n    e.preventDefault();\n\n    if (!input || /^\\s*$/.test(input)) {\n      return;\n    }\n\n    const newTodo = {\n      id: todoId,\n      text: input,\n      completed: false\n    };\n    setTodoId(todoId + 1);\n    setTodos([...todos].concat(newTodo));\n    setInput(\"\");\n    console.log(\"Added Todo\");\n  };\n\n  const deleteTodo = id => {\n    const updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n    console.log(\"Deleted Todo\");\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const submitEdit = (e, id) => {\n    e.preventDefault();\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTodo(null);\n    setEditingText(\"\");\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n    setTodoId(0);\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-title\",\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"todo-input\",\n          className: \"input-label\",\n          children: [\"Add your \", /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"To-Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 22\n          }, this), \" item:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-todo-input\",\n          name: \"todo-input\",\n          type: \"text\",\n          placeholder: \"ex: vacuum living room\",\n          onChange: e => setInput(e.target.value),\n          value: input,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-todo-button\",\n          children: \"Add To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      submitEdit: submitEdit,\n      deleteTodo: deleteTodo,\n      refState: refState,\n      setET: setET,\n      editingText: editingText,\n      setEditTodo: setEditTodo,\n      editTodo: editTodo,\n      setRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearTodos,\n      className: \"clear-button\",\n      children: \"Clear Entire To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoApp, \"/YzUpynPUFzIlKDTriO5zxREMi4=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/TodoApp.js"],"names":["React","useState","useEffect","useRef","Todo","TodoApp","input","setInput","todos","setTodos","todoId","setTodoId","editTodo","setEditTodo","editingText","setEditingText","refState","setRefState","inputRef","current","focus","setRef","ref","setET","text","console","log","loadedTodos","JSON","parse","localStorage","getItem","loadedTodoIds","setItem","stringify","addTodo","e","preventDefault","test","newTodo","id","completed","concat","deleteTodo","updatedTodos","filter","todo","toggleComplete","map","submitEdit","clearTodos","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./TodoApp.css\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoApp = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoId, setTodoId] = useState(0);\r\n  const [editTodo, setEditTodo] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n\r\n  const [refState, setRefState] = useState(\"input\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (refState === \"input\") {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [refState]);\r\n\r\n  const setRef = (ref) => {\r\n    setRefState(ref);\r\n  };\r\n\r\n  const setET = (text) => {\r\n    setEditingText(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"componentDidMount\");\r\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    const loadedTodoIds = JSON.parse(localStorage.getItem(\"todoId\"));\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n      setTodoId(loadedTodoIds);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    localStorage.setItem(\"todoId\", JSON.stringify(todoId));\r\n  }, [todos, todoId]);\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    if (!input || /^\\s*$/.test(input)) {\r\n      return;\r\n    }\r\n    const newTodo = {\r\n      id: todoId,\r\n      text: input,\r\n      completed: false,\r\n    };\r\n    setTodoId(todoId + 1);\r\n    setTodos([...todos].concat(newTodo));\r\n    setInput(\"\");\r\n    console.log(\"Added Todo\");\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n    console.log(\"Deleted Todo\");\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const submitEdit = (e, id) => {\r\n    e.preventDefault();\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.text = editingText;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    setEditTodo(null);\r\n    setEditingText(\"\");\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n    setTodoId(0);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <div className=\"app-title\">What's the Plan for Today?</div>\r\n      <form onSubmit={addTodo}>\r\n        <div className=\"add-todo\">\r\n          <label htmlFor=\"todo-input\" className=\"input-label\">\r\n            Add your <u>To-Do</u> item:\r\n          </label>\r\n          <input\r\n            className=\"add-todo-input\"\r\n            name=\"todo-input\"\r\n            type=\"text\"\r\n            placeholder=\"ex: vacuum living room\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            value={input}\r\n            ref={inputRef}\r\n          />\r\n          <button type=\"submit\" className=\"add-todo-button\">\r\n            Add To-Do\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          todo={todo}\r\n          toggleComplete={toggleComplete}\r\n          submitEdit={submitEdit}\r\n          deleteTodo={deleteTodo}\r\n          refState={refState}\r\n          setET={setET}\r\n          editingText={editingText}\r\n          setEditTodo={setEditTodo}\r\n          editTodo={editTodo}\r\n          setRef={ref}\r\n        />\r\n      ))}\r\n      <button onClick={clearTodos} className=\"clear-button\">\r\n        Clear Entire To-Do List\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}