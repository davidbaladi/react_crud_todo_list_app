{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Applications\\\\Web Dev\\\\React Projects\\\\react-todo\\\\src\\\\components\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport \"../styles/todo-app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [isEditing, setIsEditing] = useState(0);\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(todo, ...todos);\n  };\n\n  const updateTodo = (todoId, editTodo) => {\n    if (!editTodo.text || /^\\s*$/.test(editTodo.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? editTodo : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"todo-app-title\",\n        children: \"What's the Plan for Today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todo, {\n        setIsEditing: setIsEditing,\n        todos: todos,\n        completeTodo: completeTodo,\n        removeTodo: removeTodo,\n        updateTodo: updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isEditing ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-button\",\n        onClick: clearTodos,\n        children: [/*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), \" Your To-do List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoApp, \"ElFSAWe0cIy+M7G4ptUqD2+onAc=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Applications/Web Dev/React Projects/react-todo/src/components/TodoApp.js"],"names":["React","useState","useEffect","TodoForm","Todo","TodoApp","todos","setTodos","isEditing","setIsEditing","console","log","loadedTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","text","test","newTodos","updateTodo","todoId","editTodo","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete","clearTodos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\nimport \"../styles/todo-app.css\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(\"componentDidMount\");\r\n    const loadedTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(todo, ...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, editTodo) => {\r\n    if (!editTodo.text || /^\\s*$/.test(editTodo.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? editTodo : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const clearTodos = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo-app\">\r\n        <h1 className=\"todo-app-title\">What's the Plan for Today?</h1>\r\n        <TodoForm onSubmit={addTodo} />\r\n        <Todo\r\n          setIsEditing={setIsEditing}\r\n          todos={todos}\r\n          completeTodo={completeTodo}\r\n          removeTodo={removeTodo}\r\n          updateTodo={updateTodo}\r\n        />\r\n        {isEditing ? null : (\r\n          <div className=\"clear-button\" onClick={clearTodos}>\r\n            <u>Clear</u> Your To-do List\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}